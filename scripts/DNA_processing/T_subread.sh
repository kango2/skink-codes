#!/bin/bash
#PBS -N T_subread
#PBS -l ncpus=12,mem=120gb,storage=gdata/if89+gdata/xl04,walltime=36:00:00
#PBS -j oe



module use /g/data/if89/apps/modulefiles
module load subread/2.1.1 parallel/20191022 samtools/1.21
cd ${workingdir}

#index genome
mkdir -p ${workingdir}/subread_${directory_name}/index
subread-buildindex -o ${workingdir}/subread_${directory_name}/index/genome ${genome}

#subread mapping to genome
mkdir -p ${workingdir}/subread_${directory_name}/mapping

while IFS=',' read -r col1 col2 col3 col4
do
    echo -e "subread-align -t 1 -T ${PBS_NCPUS} --sortReadsByCoordinates -i ${workingdir}/subread_${directory_name}/index/genome -r ${col3} -R ${col4} -o ${workingdir}/subread_${directory_name}/mapping/${col2}_subread.bam"
done < ${input_list} | parallel --jobs ${PBS_NCPUS} {}


# removing index files, these were generated by subread and not supported by bamcoverage for some reason
cd ${workingdir}/subread_${directory_name}/mapping
rm *.bai
mkdir unmerged

# merging samples with multiple lanes
awk -F',' '{print $1, $2}' ${input_list} | sort > ${workingdir}/subread_${directory_name}/tmpfile
for sample in $(cut -d' ' -f1 ${workingdir}/subread_${directory_name}/tmpfile | uniq); do
    count=$(grep "^$sample " ${workingdir}/subread_${directory_name}/tmpfile | wc -l)
    if [ "$count" -gt 1 ]; then
        merge_cmd="samtools merge --threads \${PBS_NCPUS} ${sample}_unsorted_subread.bam"
        lanes=$(grep "^$sample " ${workingdir}/subread_${directory_name}/tmpfile | awk '{print $2}')
        for lane in $lanes; do
            merge_cmd+=" ${lane}_subread.bam"
        done
        echo "$merge_cmd" >> ${workingdir}/subread_${directory_name}/merge_commands.txt
        eval "$merge_cmd"
    fi
done

# sorting merged bam files
for i in $(ls *_unsorted_subread.bam); do
    samtools sort --threads ${PBS_NCPUS} ${i} > ${i/_unsorted_subread.bam/}_subread.bam
done

# moving unmerged bam files to unmerged directory
for sample in $(cut -d' ' -f1 ${workingdir}/subread_${directory_name}/tmpfile | uniq); do
    count=$(grep "^$sample " ${workingdir}/subread_${directory_name}/tmpfile | wc -l)
    if [ "$count" -gt 1 ]; then
        lanes=$(grep "^$sample " ${workingdir}/subread_${directory_name}/tmpfile | awk '{print $2}')
        for lane in $lanes; do
            mv ${lane}_subread.bam ${workingdir}/subread_${directory_name}/mapping/unmerged/
            mv ${lane}_subread.bam.indel.vcf ${workingdir}/subread_${directory_name}/mapping/unmerged/
        done
    fi
done

# removing unsorted bam files
rm *_unsorted_subread.bam

# removing tmpfile
rm ${workingdir}/subread_${directory_name}/tmpfile

# renaming merge commands file into a log file
mv ${workingdir}/subread_${directory_name}/merge_commands.txt ${workingdir}/subread_${directory_name}/merge_commands.txt.log

# indexing bam files
for i in $(ls *.bam); do echo ${i}; done | \
parallel --jobs ${PBS_NCPUS} samtools index -b -@ ${PBS_NCPUS} {} {}.bai

# logging package versions
echo -e "T_subread complete\nPackage version:\n\t- subread/2.1.1\n\t- samtools/1.21" >> ${workingdir}/../LOG/log_${directory_name}/T.packageVersion.txt
